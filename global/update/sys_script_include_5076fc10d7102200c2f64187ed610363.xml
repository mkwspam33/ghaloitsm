<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>global.PasswordResetUtil</api_name>
        <caller_access/>
        <claim/>
        <client_callable>true</client_callable>
        <description>Utility class for password reset application</description>
        <name>PasswordResetUtil</name>
        <script><![CDATA[var PasswordResetUtil = Class.create();
PasswordResetUtil.prototype = Object.extendsObject(PwdAjaxRequestProcessor, {

	isPublic: function() {
		return true;
	},
	
	validatePassword : function() {
	    var validateErr = SNC.PasswordResetUtil.validateStrongerPassword();
		if ("true" != validateErr) 
			this.setAnswer("false");
		else
			this.setAnswer("true");
	},
	
	sendResetEmail: function() {
		if(!this._validateSecurity()){
			return;
		}
		
		var result = this.newItem("result");
		var userId = gs.getSession().getProperty('sysparm_sys_user_id');
		// We get the requestId from the trustworthy session so no need to sanitize
		var requestId = gs.getSession().getProperty('sysparm_request_id');
		var redirectUrl = gs.getSession().getProperty('pwd_redirect_url');
		
		this._sendResetEmail(userId,requestId, result, redirectUrl);
	},
	
	_sendResetEmail: function(userId, requestId, result, redirectUrl) {
		var usr = new GlideRecord('sys_user');
		usr.addQuery('sys_id', userId);
		usr.addQuery('active', 'true');
		usr.queryNoDomain();
		if(!usr.next()){
			gs.log("User : " + userId + " is eiter inactive or doesn't exist on the instance");
			result.setAttribute("result","false");
			return;
		}
		var resetPasswordURL = '';
		var token = SNC.PasswordResetUtil.generateUniqueUserToken(usr.sys_id);
		if(GlideStringUtil.notNil(token)) {
			resetPasswordURL = this.getInstanceURL() + '/passwordreset.do?sysparm_id=' + usr.sys_id + '&sysparm_request_id=' + requestId + '&sysparm_nostack=true&sysparm_token=' + token;
			if (redirectUrl) {
				resetPasswordURL = resetPasswordURL + '&sysparm_redirect_url='+redirectUrl;
			}
		}
		else {
			logError("Failed to generate unique token for user. Password reset failed for user : " + usr.user_name);
			result.setAttribute("result","false");
			return;
		}
		var eventName = 'password.reset.url';
		var param1 = GlideProperties.get("glide.pwd_reset.onetime.token.validity","12");
		var param2 = resetPasswordURL;
		gs.eventQueue(eventName, usr, param1, param2);
		result.setAttribute("result","true");
	},
	
	 getInstanceURL: function() {
        var url = gs.getProperty("glide.servlet.uri");
        if (GlideStringUtil.nil(url)) {
            gs.log("glide.servlet.url is empty!");
            return "";
        }
        url = url.trim();
        var len = url.length;
        if (url[len-1] == '/')
            return url.substring(0, len-1);
        
        return url;
	},
	
    type: 'PasswordResetUtil'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-06-24 18:43:59</sys_created_on>
        <sys_id>5076fc10d7102200c2f64187ed610363</sys_id>
        <sys_mod_count>31</sys_mod_count>
        <sys_name>PasswordResetUtil</sys_name>
        <sys_package display_value="GHalo ITSM" source="bd441a2777030010ca3ab5b268106132">bd441a2777030010ca3ab5b268106132</sys_package>
        <sys_policy/>
        <sys_scope display_value="GHalo ITSM">bd441a2777030010ca3ab5b268106132</sys_scope>
        <sys_update_name>sys_script_include_5076fc10d7102200c2f64187ed610363</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-02-24 22:12:43</sys_updated_on>
    </sys_script_include>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="GHalo ITSM">bd441a2777030010ca3ab5b268106132</claim_owner_scope>
        <claim_timestamp>170794273730000001</claim_timestamp>
        <metadata_update_name>sys_script_include_5076fc10d7102200c2f64187ed610363</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>GHalo ITSM</previous_claim_name>
        <previous_claim_scope>bd441a2777030010ca3ab5b268106132</previous_claim_scope>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-02-24 22:12:42</sys_created_on>
        <sys_id>f0b81ae777030010ca3ab5b2681061fb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-02-24 22:12:42</sys_updated_on>
    </sys_claim>
</record_update>
